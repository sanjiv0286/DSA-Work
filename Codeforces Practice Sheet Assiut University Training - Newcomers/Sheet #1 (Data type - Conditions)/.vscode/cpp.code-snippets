{
  "sanjiv": {
    "prefix": "SK",
    "body": [
   
      "//DATE: $CURRENT_DATE-$CURRENT_MONTH-$CURRENT_YEAR ",
      "//TIME: $CURRENT_HOUR-$CURRENT_MINUTE-$CURRENT_SECOND ",
      "#include<bits/stdc++.h>",
      "using namespace std;",
      "",
      "#define ll long long",
      "#define sq(a) (a)*(a)",
      "#define all(a) a.begin(), a.end()",
      "",
      "#define forn(i, n) for (int i = 0; i < n; i++)",
      "",
      "const double PI = 3.14;",
      "//extern int x;",
      "",
      "void solve()",
      "{",
      "",
      "}",
      "",
      "int main(){",
      "ios_base::sync_with_stdio(0);",
      "cin.tie(0);  ",
      "cout.tie(NULL); ",
      "ll t;",
      "cin >> t;",
      "while (t--) ",
      "{",
      "solve();",
      "}",
      "",
      "int n;",
      "cin >> n;",
      "int arr[n];",
      "forn(i,n) ",
      "{",
      "cin>>arr[i];",
      "}",
      "",
      "string s;",
      "getline(cin, s);",
      "cin.ignore();",
      "",
      "return 0;",
      "} ",
      "",
    
    ],
    "description": "cpp template"
  }
  // Place your C++ LANGUAGE workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
}
